ASP.NET Core is built on top of .NET Core.
Cross Platform on Windows, Linux and Mac.
Not tied to .NET Framework.

MVC has the following advantages:
- Architectural pattern (logical as very modular)
- Separates the concerns and issues within different parts of the system
- Promotes the testability and maintanability

In the project, the main function is the program.cs file.
Startup.cs class does two things:
- Define request handling pipeline and configure all services within the application

Process of Application Startup
- Application start
- Startup class 
- ConfigureServices method
- Configure method
- Ready for requests

Model
Has domain data and logic to manage data
Simple API
Hides details of managing the data from end user

Sample Pie Model Class {
public class Pie
public int Id { get; set; } 
public string Name { get; set; } 
public string ShortDescription { get; set; } 
public string LongDescription { get; set; } 
public decimal Price { get; set; } 
public string ImageUrl { get; set; } 
public string ImageThumbnailUrl { get; set; } 
public bool IsPieOfTheWeek { get; set; } 
public Category Category { get; set; }
}

Controller
- Responds to user interaction
- Update model
- No knowledge of data persistance

Sample Controller 1

public class PieController : Controller {
public ViewResult Index()
return View();
}

Sample Controller 2

public class PieController : Controller {
private readonly IPieRepository _pieRepository; 
public PieController (IPieRepository pieRepository) {
_pieRepository = pieRepository;
}
public ViewResult List() {
return View ( _pieRepository.Pies);
}
}
